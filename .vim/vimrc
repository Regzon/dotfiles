set number
set linebreak
set showbreak=+++
set showmatch
 
" Search settings
set hlsearch
set smartcase
set ignorecase
set incsearch

" Plug package manager
call plug#begin()
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'chriskempson/base16-vim'
Plug 'scrooloose/nerdtree'
Plug 'mattn/emmet-vim'
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'w0rp/ale'
" Plug 'hdima/python-syntax', { 'as': 'base-python-syntax' }
" Plug 'kh3phr3n/python-syntax'
Plug 'pangloss/vim-javascript'
Plug 'posva/vim-vue'
Plug 'cakebaker/scss-syntax.vim'
Plug 'kien/ctrlp.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'melonmanchan/vim-tmux-resizer'
Plug 'python-mode/python-mode', {'branch': 'develop'}
Plug 'chr4/nginx.vim'
Plug 'ekalinin/Dockerfile.vim'
Plug 'suan/vim-instant-markdown', {'for': 'markdown'}
Plug 'kkoomen/vim-doge'
Plug 'Quramy/vim-js-pretty-template', {'commit': 'dcdfe453a2ce7'}
Plug 'othree/html5.vim'
Plug 'fatih/vim-go'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'evanleck/vim-svelte', {'branch': 'main'}
Plug 'lark-parser/vim-lark-syntax'
Plug 'aklt/plantuml-syntax'
call plug#end()

" Set mapleader
let mapleader = ","
" Clear search
map <Leader><Space> :let @/=''<CR>
" Toggle NERD Tree
map <Leader>t :NERDTreeToggle<CR>

" Swap words
" To use this mapping: first, delete some text.
" Then, use visual mode to select some other text, and press Ctrl-X.
:vnoremap <C-X> <Esc>`.``gvP``P

" Enable filetype-specific plugins
filetype plugin on

" Instatnt markdown configuration
" Note: ensure you've installed instant-markdown-d via npm
let g:instant_markdown_autostart = 0
" Preview markdown file
no <Leader>s :InstantMarkdownPreview<CR>
" Stop markdown file preview
no <Leader>f :InstantMarkdownStop<CR>

" Python highlight
let python_highlight_all=1

" Theme setup
set tgc
syntax on
color dracula

" Pymode configuration
let g:pymode = 1
let g:pymode_trim_whitespaces = 1
let g:pymode_python = 'python3'
let g:pymode_options_max_line_length = 79
let g:pymode_options_colorcolumn = 1
let g:pymode_indent = 1
let g:pymode_motion = 1
let g:pymode_virtualenv = 1
let g:pymode_lint = 0
let g:pymode_rope = 1
let g:pymode_rope_show_doc_bind = '<C-c>d'
let g:pymode_rope_completion = 1
let g:pymode_rope_complete_on_dot = 0
let g:pymode_rope_completion_bind = '<C-Space>'
let g:pymode_rope_goto_definition_bind = '<C-c>g'
let g:pymode_rope_goto_definition_cmd = 'new'
let g:pymode_rope_rename_bind = '<C-c>rr'
let g:pymode_rope_regenerate_on_write = 1
let g:pymode_syntax = 0
let g:pymode_syntax_slow_sync = 0
let g:pymode_syntax_all = 0

autocmd CompleteDone * pclose

" Ale configuration
let g:ale_completion_enabled = 0
let g:ale_linters = {
\   'python': ['flake8', 'pyls', 'pycodestyle', 'mypy']
\}

nmap <silent> <leader>j :ALENext<cr>
nmap <silent> <leader>k :ALEPrevious<cr>

" Documentation configuration
let g:doge_doc_standard_python = 'numpy'

" Splits configuration
set splitbelow
set splitright

" Tmux resize configuration
let g:tmux_resizer_no_mappings = 1

nnoremap <silent> <M-Left> :TmuxResizeLeft<cr>
nnoremap <silent> <M-Down> :TmuxResizeDown<cr>
nnoremap <silent> <M-Up> :TmuxResizeUp<cr>
nnoremap <silent> <M-Right> :TmuxResizeRight<cr>

" NerdTree configuration
let NERDTreeIgnore = ['\.pyc$', '__pycache__']
let NERDTreeCascadeSingleChildDir=0

" Jump to next error with Ctrl-n and previous error with Ctrl-m. Close the
" quickfix window with <leader>a
map <C-n> :cnext<CR>
map <C-m> :cprevious<CR>
nnoremap <leader>a :cclose<CR>

" Enter automatically into the files directory
autocmd BufEnter * silent! lcd %:p:h

" vim-go
let g:go_fmt_command = "goimports"
let g:go_autodetect_gopath = 1
let g:go_list_type = "quickfix"

let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_generate_tags = 1

" Splitjoin configuration
let g:splitjoin_python_brackets_on_separate_lines = 1
let g:splitjoin_trailing_comma = 1


" Enable indents
filetype indent on

" Common indents
set autoindent
set smartindent
set smarttab
set expandtab
set softtabstop=4
set shiftwidth=4
set tabstop=4

" File type indents
au FileType yml,yaml set shiftwidth=2 |
            \ set softtabstop=2 |
            \ set tabstop=2

au FileType python set shiftwidth=4 |
            \ set softtabstop=4 |
            \ set tabstop=4

au FileType javascript,vue,svelte set shiftwidth=2 |
            \ set softtabstop=2 |
            \ set tabstop=2

au FileType html,htmldjango,json,css,scss set shiftwidth=2 |
            \ set softtabstop=2 |
            \ set tabstop=2

au FileType nginx set shiftwidth=2 |
            \ set softtabstop=2 |
            \ set tabstop=2

au FileType sh set shiftwidth=2 |
            \ set softtabstop=2 |
            \ set tabstop=2


highlight ExtraWhitespace cterm=underline guifg=LightBlue
au BufRead,InsertEnter *.py,*.c,*.h match ExtraWhitespace /\s\+$/
 
" Miscellaneous
set ruler
set undolevels=1000
set backspace=indent,eol,start
set scrolloff=5
